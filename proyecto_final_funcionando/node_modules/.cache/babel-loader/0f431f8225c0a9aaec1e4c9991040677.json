{"ast":null,"code":"var _jsxFileName = \"/Users/sergio/Desktop/development/proyecto_final_funcionando/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Coin from './Coin';\nimport chart from './components/chart'; //import Cards from './components/Cards';\n//import { coinData } from './data';\n//import { Sparklines, SparklinesLine } from 'react-sparklines';\n\n/*populate the labels and data arrays with data from the API. To achieve this,  use the map method to create an array of the values gotten from the API:*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(''); //const [coinData, setCoinData] = useState({\n  // chart.js requiere los datos de una forma concreta\n  //labels: [], //por ejemplo a침os\n  //datasets: [],\n  //});\n  //const url =\n  // 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=50&page=1&sparkline=false';\n\n  const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=30&page=1&sparkline=true';\n  /*const chartUrl =\n    'https://api.coingecko.com/api/v3/exchanges/binance/volume_chart?days=1';*/\n\n  useEffect(() => {\n    axios.get(url).then(res => {\n      //establece en coins el resultado de la respuesta ,coins va a tener ese array\n      setCoins(res.data);\n    }).catch(error => console.log(error)); //setCoinData();\n    //SparklinesLine();\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  }; //funci칩n que filtra los datos\n\n\n  const filteredCoins = coins.filter(coin => //para que escrito de cualquier forma coincida\n  coin.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"crypto-text\",\n        children: \"Search a cryptocurrency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"crypto-input\",\n          type: \"text\",\n          onChange: handleChange,\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), filteredCoins.map(coin => {\n      return /*#__PURE__*/_jsxDEV(Coin, {\n        name: coin.name,\n        price: coin.current_price,\n        symbol: coin.symbol,\n        marketcap: coin.total_volume,\n        volume: coin.market_cap,\n        image: coin.image,\n        priceChange: coin.price_change_percentage_24h,\n        sparkLine: coin.sparkline_in_7d.price\n      }, coin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RP/vHIb1hIGkJRpJzwuYjErexok=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Coin","chart","App","coins","setCoins","search","setSearch","url","get","then","res","data","catch","error","console","log","handleChange","e","target","value","filteredCoins","filter","coin","name","toLowerCase","includes","map","current_price","symbol","total_volume","market_cap","image","price_change_percentage_24h","sparkline_in_7d","price","id"],"sources":["/Users/sergio/Desktop/development/proyecto_final_funcionando/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Coin from './Coin';\nimport chart from './components/chart';\n//import Cards from './components/Cards';\n//import { coinData } from './data';\n//import { Sparklines, SparklinesLine } from 'react-sparklines';\n\n/*populate the labels and data arrays with data from the API. To achieve this,  use the map method to create an array of the values gotten from the API:*/\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n  //const [coinData, setCoinData] = useState({\n  // chart.js requiere los datos de una forma concreta\n  //labels: [], //por ejemplo a침os\n  //datasets: [],\n  //});\n  //const url =\n  // 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=50&page=1&sparkline=false';\n  const url =\n    'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=30&page=1&sparkline=true';\n  /*const chartUrl =\n    'https://api.coingecko.com/api/v3/exchanges/binance/volume_chart?days=1';*/\n\n  useEffect(() => {\n    axios\n      .get(url)\n      .then((res) => {\n        //establece en coins el resultado de la respuesta ,coins va a tener ese array\n        setCoins(res.data);\n      })\n      .catch((error) => console.log(error));\n    //setCoinData();\n    //SparklinesLine();\n  }, []);\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n  //funci칩n que filtra los datos\n  const filteredCoins = coins.filter((coin) =>\n    //para que escrito de cualquier forma coincida\n    coin.name.toLowerCase().includes(search.toLowerCase()),\n  );\n\n  return (\n    <div className=\"crypto-app\">\n      <div className=\"crypto-search\">\n        <h1 className=\"crypto-text\">Search a cryptocurrency</h1>\n\n        <form>\n          <input\n            className=\"crypto-input\"\n            type=\"text\"\n            onChange={handleChange}\n            placeholder=\"Search\"\n          />\n        </form>\n      </div>\n      {filteredCoins.map((coin) => {\n        return (\n          <Coin\n            key={coin.id}\n            name={coin.name}\n            price={coin.current_price}\n            symbol={coin.symbol}\n            marketcap={coin.total_volume}\n            volume={coin.market_cap}\n            image={coin.image}\n            priceChange={coin.price_change_percentage_24h}\n            sparkLine={coin.sparkline_in_7d.price}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AACA;AACA;;AAEA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAFa,CAGb;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,MAAMU,GAAG,GACP,wHADF;EAEA;AACF;;EAEET,SAAS,CAAC,MAAM;IACdC,KAAK,CACFS,GADH,CACOD,GADP,EAEGE,IAFH,CAESC,GAAD,IAAS;MACb;MACAN,QAAQ,CAACM,GAAG,CAACC,IAAL,CAAR;IACD,CALH,EAMGC,KANH,CAMUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANpB,EADc,CAQd;IACA;EACD,CAVQ,EAUN,EAVM,CAAT;;EAYA,MAAMG,YAAY,GAAIC,CAAD,IAAO;IAC1BX,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;EACD,CAFD,CA3Ba,CA8Bb;;;EACA,MAAMC,aAAa,GAAGjB,KAAK,CAACkB,MAAN,CAAcC,IAAD,IACjC;EACAA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCpB,MAAM,CAACmB,WAAP,EAAjC,CAFoB,CAAtB;EAKA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,wBACE;MAAK,SAAS,EAAC,eAAf;MAAA,wBACE;QAAI,SAAS,EAAC,aAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAGE;QAAA,uBACE;UACE,SAAS,EAAC,cADZ;UAEE,IAAI,EAAC,MAFP;UAGE,QAAQ,EAAER,YAHZ;UAIE,WAAW,EAAC;QAJd;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAaGI,aAAa,CAACM,GAAd,CAAmBJ,IAAD,IAAU;MAC3B,oBACE,QAAC,IAAD;QAEE,IAAI,EAAEA,IAAI,CAACC,IAFb;QAGE,KAAK,EAAED,IAAI,CAACK,aAHd;QAIE,MAAM,EAAEL,IAAI,CAACM,MAJf;QAKE,SAAS,EAAEN,IAAI,CAACO,YALlB;QAME,MAAM,EAAEP,IAAI,CAACQ,UANf;QAOE,KAAK,EAAER,IAAI,CAACS,KAPd;QAQE,WAAW,EAAET,IAAI,CAACU,2BARpB;QASE,SAAS,EAAEV,IAAI,CAACW,eAAL,CAAqBC;MATlC,GACOZ,IAAI,CAACa,EADZ;QAAA;QAAA;QAAA;MAAA,QADF;IAaD,CAdA,CAbH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD;;GAnEQjC,G;;KAAAA,G;AAqET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}